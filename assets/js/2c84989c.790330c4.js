"use strict";(self.webpackChunkobsidian_plugin_docs=self.webpackChunkobsidian_plugin_docs||[]).push([[4008],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=u(n),d=i,g=m["".concat(l,".").concat(d)]||m[d]||c[d]||r;return n?a.createElement(g,s(s({ref:t},p),{},{components:n})):a.createElement(g,s({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,s=new Array(r);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var u=2;u<r;u++)s[u]=n[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},38289:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return p},default:function(){return m}});var a=n(87462),i=n(63366),r=(n(67294),n(3905)),s=["components"],o={},l="Release your plugin with GitHub Actions",u={unversionedId:"publishing/release-your-plugin-with-github-actions",id:"publishing/release-your-plugin-with-github-actions",isDocsHomePage:!1,title:"Release your plugin with GitHub Actions",description:"Manually creating your plugin release can be time-consuming and error-prone. In this guide, you'll configure your plugin to use GitHub Actions to automatically create a release when you create a new tag.",source:"@site/docs/publishing/release-your-plugin-with-github-actions.md",sourceDirName:"publishing",slug:"/publishing/release-your-plugin-with-github-actions",permalink:"/obsidian-plugin-docs/publishing/release-your-plugin-with-github-actions",editUrl:"https://github.com/marcusolsson/obsidian-plugin-docs/edit/main/docs/publishing/release-your-plugin-with-github-actions.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Submit your plugin",permalink:"/obsidian-plugin-docs/publishing/submit-your-plugin"},next:{title:"Submission guidelines",permalink:"/obsidian-plugin-docs/publishing/submission-guidelines"}},p=[],c={toc:p};function m(e){var t=e.components,n=(0,i.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"release-your-plugin-with-github-actions"},"Release your plugin with GitHub Actions"),(0,r.kt)("p",null,"Manually creating your plugin release can be time-consuming and error-prone. In this guide, you'll configure your plugin to use ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/features/actions"},"GitHub Actions")," to automatically create a release when you create a new tag."),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The GitHub Action workflow was originally created and shared by ",(0,r.kt)("a",{parentName:"p",href:"https://forum.obsidian.md/u/argentum"},"argentum"),". For more information and other variations, refer to the ",(0,r.kt)("a",{parentName:"p",href:"https://forum.obsidian.md/t/using-github-actions-to-release-plugins/7877/3"},"forum announcement"),"."))),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In the root directory of your plugin, create a file called ",(0,r.kt)("inlineCode",{parentName:"p"},"release.yml")," under ",(0,r.kt)("inlineCode",{parentName:"p"},".github/workflows")," with the following content:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title=".github/workflows/release.yml"',title:'".github/workflows/release.yml"'},'name: Release Obsidian plugin\n\non:\n  push:\n    tags:\n      - "*"\n\nenv:\n  PLUGIN_NAME: your-plugin-id # Change this to match the id of your plugin.\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n\n    steps:\n      - uses: actions/checkout@v2\n      - name: Use Node.js\n        uses: actions/setup-node@v1\n        with:\n          node-version: "14.x"\n\n      - name: Build\n        id: build\n        run: |\n          yarn install\n          yarn run build\n          mkdir ${{ env.PLUGIN_NAME }}\n          cp main.js manifest.json styles.css ${{ env.PLUGIN_NAME }}\n          zip -r ${{ env.PLUGIN_NAME }}.zip ${{ env.PLUGIN_NAME }}\n          ls\n          echo "::set-output name=tag_name::$(git tag --sort version:refname | tail -n 1)"\n\n      - name: Create Release\n        id: create_release\n        uses: actions/create-release@v1\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n          VERSION: ${{ github.ref }}\n        with:\n          tag_name: ${{ github.ref }}\n          release_name: ${{ github.ref }}\n          draft: false\n          prerelease: false\n\n      - name: Upload zip file\n        id: upload-zip\n        uses: actions/upload-release-asset@v1\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        with:\n          upload_url: ${{ steps.create_release.outputs.upload_url }}\n          asset_path: ./${{ env.PLUGIN_NAME }}.zip\n          asset_name: ${{ env.PLUGIN_NAME }}-${{ steps.build.outputs.tag_name }}.zip\n          asset_content_type: application/zip\n\n      - name: Upload main.js\n        id: upload-main\n        uses: actions/upload-release-asset@v1\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        with:\n          upload_url: ${{ steps.create_release.outputs.upload_url }}\n          asset_path: ./main.js\n          asset_name: main.js\n          asset_content_type: text/javascript\n\n      - name: Upload manifest.json\n        id: upload-manifest\n        uses: actions/upload-release-asset@v1\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        with:\n          upload_url: ${{ steps.create_release.outputs.upload_url }}\n          asset_path: ./manifest.json\n          asset_name: manifest.json\n          asset_content_type: application/json\n\n      - name: Upload styles.css\n        id: upload-css\n        uses: actions/upload-release-asset@v1\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        with:\n          upload_url: ${{ steps.create_release.outputs.upload_url }}\n          asset_path: ./styles.css\n          asset_name: styles.css\n          asset_content_type: text/css\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In your terminal, commit the workflow."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'git add .github/workflows/release.yml\ngit commit -m "Add release workflow"\ngit push origin main\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a tag that matches the version in the ",(0,r.kt)("inlineCode",{parentName:"p"},"manifest.json")," file."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'git tag -a 1.0.1 -m "1.0.1"\ngit push origin 1.0.1\n')),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-a")," creates an ",(0,r.kt)("a",{parentName:"li",href:"https://git-scm.com/book/en/v2/Git-Basics-Tagging#_creating_tags"},"annotated tag"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-m")," specifies the name of your release. For Obsidian plugins, this must be the same as the version."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Browse to your repository on GitHub and click the ",(0,r.kt)("strong",{parentName:"p"},"Actions")," tab. Your workflow might still be running, or it might have finished already.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"When the workflow finishes, go back to the main page for your repository and click ",(0,r.kt)("strong",{parentName:"p"},"Releases")," in the side bar on the right-hand side. The workflow has created a GitHub release and uploaded the required assets as binary attachments."))),(0,r.kt)("p",null,"You've set up your plugin to automatically create a GitHub release whenever you create a new tag."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If this is the first release for this plugin, you're now ready to ",(0,r.kt)("a",{parentName:"li",href:"/obsidian-plugin-docs/publishing/submit-your-plugin"},"submit your plugin"),"."),(0,r.kt)("li",{parentName:"ul"},"If this is an update to an already published plugin, your users can now update to the latest version.")))}m.isMDXComponent=!0}}]);