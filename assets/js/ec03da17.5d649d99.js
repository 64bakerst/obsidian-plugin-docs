"use strict";(self.webpackChunkobsidian_plugin_docs=self.webpackChunkobsidian_plugin_docs||[]).push([[364],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return m}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(r),m=a,w=u["".concat(s,".").concat(m)]||u[m]||p[m]||i;return r?n.createElement(w,o(o({ref:t},d),{},{components:r})):n.createElement(w,o({ref:t},d))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},30798:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return d},default:function(){return u}});var n=r(87462),a=r(63366),i=(r(67294),r(3905)),o=["components"],l={},s="MarkdownView",c={unversionedId:"api/classes/MarkdownView",id:"api/classes/MarkdownView",isDocsHomePage:!1,title:"MarkdownView",description:"Properties",source:"@site/docs/api/classes/MarkdownView.md",sourceDirName:"api/classes",slug:"/api/classes/MarkdownView",permalink:"/obsidian-plugin-docs/api/classes/MarkdownView",editUrl:"https://github.com/marcusolsson/obsidian-plugin-docs/edit/main/docs/api/classes/MarkdownView.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"MarkdownSourceView",permalink:"/obsidian-plugin-docs/api/classes/MarkdownSourceView"},next:{title:"Menu",permalink:"/obsidian-plugin-docs/api/classes/Menu"}},d=[{value:"Properties",id:"properties",children:[{value:"editor",id:"editor",children:[]},{value:"previewMode",id:"previewmode",children:[]},{value:"currentMode",id:"currentmode",children:[]}]},{value:"Methods",id:"methods",children:[{value:"getViewType",id:"getviewtype",children:[]},{value:"getMode",id:"getmode",children:[]},{value:"getViewData",id:"getviewdata",children:[]},{value:"clear",id:"clear",children:[]},{value:"setViewData",id:"setviewdata",children:[]},{value:"showSearch",id:"showsearch",children:[]}]}],p={toc:d};function u(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"markdownview"},"MarkdownView"),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"editor"},"editor"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"editor: Editor\n")),(0,i.kt)("h3",{id:"previewmode"},"previewMode"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"previewMode: MarkdownPreviewView\n")),(0,i.kt)("h3",{id:"currentmode"},"currentMode"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"currentMode: MarkdownSubView\n")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"getviewtype"},"getViewType"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"getViewType(): string;\n")),(0,i.kt)("h3",{id:"getmode"},"getMode"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"getMode(): MarkdownViewModeType;\n")),(0,i.kt)("h3",{id:"getviewdata"},"getViewData"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"getViewData(): string;\n")),(0,i.kt)("p",null,"Gets the data from the editor. This will be called to save the editor contents to the file."),(0,i.kt)("h3",{id:"clear"},"clear"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"clear(): void;\n")),(0,i.kt)("p",null,"Clear the editor. This is usually called when we're about to open a completely\ndifferent file, so it's best to clear any editor states like undo-redo history,\nand any caches/indexes associated with the previous file contents."),(0,i.kt)("h3",{id:"setviewdata"},"setViewData"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"setViewData(data: string, clear: boolean): void;\n")),(0,i.kt)("p",null,"Set the data to the editor. This is used to load the file contents."),(0,i.kt)("p",null,"If clear is set, then it means we're opening a completely different file.\nIn that case, you should call clear(), or implement a slightly more efficient\nclearing mechanism given the new data to be set."),(0,i.kt)("h3",{id:"showsearch"},"showSearch"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"showSearch(replace?: boolean): void;\n")))}u.isMDXComponent=!0}}]);