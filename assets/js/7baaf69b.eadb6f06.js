"use strict";(self.webpackChunkobsidian_plugin_docs=self.webpackChunkobsidian_plugin_docs||[]).push([[8628],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return m}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=p(r),m=o,f=u["".concat(s,".").concat(m)]||u[m]||l[m]||i;return r?n.createElement(f,a(a({ref:t},d),{},{components:r})):n.createElement(f,a({ref:t},d))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var p=2;p<i;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},75933:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return d},default:function(){return u}});var n=r(87462),o=r(63366),i=(r(67294),r(3905)),a=["components"],c={},s="CodeMirror",p={unversionedId:"concepts/codemirror",id:"concepts/codemirror",isDocsHomePage:!1,title:"CodeMirror",description:"Obsidian uses CodeMirror as the underlying text editor.",source:"@site/docs/concepts/codemirror.md",sourceDirName:"concepts",slug:"/concepts/codemirror",permalink:"/obsidian-plugin-docs/concepts/codemirror",editUrl:"https://github.com/marcusolsson/obsidian-plugin-docs/edit/main/docs/concepts/codemirror.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Anatomy of a plugin",permalink:"/obsidian-plugin-docs/concepts/plugin-anatomy"},next:{title:"Vault",permalink:"/obsidian-plugin-docs/concepts/vault"}},d=[],l={toc:d};function u(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"codemirror"},"CodeMirror"),(0,i.kt)("p",null,"Obsidian uses ",(0,i.kt)("a",{parentName:"p",href:"https://codemirror.net/"},"CodeMirror")," as the underlying text editor."),(0,i.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Only consider CodeMirror if what you want to do isn't already possible through the ",(0,i.kt)("a",{parentName:"p",href:"/obsidian-plugin-docs/guides/editor"},"Editor"),"."),(0,i.kt)("p",{parentName:"div"},"While Obsidian makes the underlying CodeMirror instance available to plugins through the Obsidian API, most plugins shouldn't use it. If possible, use ",(0,i.kt)("a",{parentName:"p",href:"/obsidian-plugin-docs/api/classes/Editor"},(0,i.kt)("inlineCode",{parentName:"a"},"Editor")),", a high-level abstraction that bridges breaking changes between different versions of CodeMirror."))),(0,i.kt)("p",null,"You can access the CodeMirror editor on an active Markdown view:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const view = this.app.workspace.getActiveViewOfType(MarkdownView);\n\nif (view) {\n  const editor = view.sourceMode.cmEditor;\n}\n")),(0,i.kt)("p",null,"You can also use ",(0,i.kt)("a",{parentName:"p",href:"/obsidian-plugin-docs/api/classes/Plugin_2#registercodemirror"},(0,i.kt)("inlineCode",{parentName:"a"},"registerCodeMirror()"))," to register a callback function whenever the user opens a new editor."))}u.isMDXComponent=!0}}]);