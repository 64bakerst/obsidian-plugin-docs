"use strict";(self.webpackChunkobsidian_plugin_docs=self.webpackChunkobsidian_plugin_docs||[]).push([[436],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var i=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=i.createContext({}),u=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=u(e.components);return i.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},m=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=u(t),d=r,g=m["".concat(l,".").concat(d)]||m[d]||c[d]||o;return t?i.createElement(g,a(a({ref:n},p),{},{components:t})):i.createElement(g,a({ref:n},p))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var u=2;u<o;u++)a[u]=t[u];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}m.displayName="MDXCreateElement"},39541:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return p},default:function(){return m}});var i=t(87462),r=t(63366),o=(t(67294),t(3905)),a=["components"],s={},l="Submission guidelines",u={unversionedId:"publishing/submission-guidelines",id:"publishing/submission-guidelines",isDocsHomePage:!1,title:"Submission guidelines",description:"This page lists common review comments plugin authors get when submitting their plugin.",source:"@site/docs/publishing/submission-guidelines.md",sourceDirName:"publishing",slug:"/publishing/submission-guidelines",permalink:"/obsidian-plugin-docs/publishing/submission-guidelines",editUrl:"https://github.com/marcusolsson/obsidian-plugin-docs/edit/main/docs/publishing/submission-guidelines.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Release your plugin with GitHub Actions",permalink:"/obsidian-plugin-docs/publishing/release-your-plugin-with-github-actions"},next:{title:"AbstractTextComponent",permalink:"/obsidian-plugin-docs/api/classes/AbstractTextComponent"}},p=[{value:"Use <code>normalizePath()</code> to clean up user-defined paths",id:"use-normalizepath-to-clean-up-user-defined-paths",children:[]}],c={toc:p};function m(e){var n=e.components,t=(0,r.Z)(e,a);return(0,o.kt)("wrapper",(0,i.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"submission-guidelines"},"Submission guidelines"),(0,o.kt)("p",null,"This page lists common review comments plugin authors get when submitting their plugin."),(0,o.kt)("h2",{id:"use-normalizepath-to-clean-up-user-defined-paths"},"Use ",(0,o.kt)("inlineCode",{parentName:"h2"},"normalizePath()")," to clean up user-defined paths"),(0,o.kt)("p",null,"Use ",(0,o.kt)("a",{parentName:"p",href:"../api/functions/normalizePath"},(0,o.kt)("inlineCode",{parentName:"a"},"normalizePath()"))," whenever you accept user-defined paths to files or folders in the vault, or when you construct your own paths in the plugin code."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"normalizePath()")," takes a path and scrubs it to be safe for the file system and for cross-platform use. This function:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Cleans up the use of forward and backward slashes, such as replacing 1 or more of ",(0,o.kt)("inlineCode",{parentName:"li"},"\\")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"/")," with a single ",(0,o.kt)("inlineCode",{parentName:"li"},"/"),"."),(0,o.kt)("li",{parentName:"ul"},"Removes leading and trailing forward and backward slashes."),(0,o.kt)("li",{parentName:"ul"},"Replaces any non-breaking spaces, ",(0,o.kt)("inlineCode",{parentName:"li"},"\\u00A0"),", with a regular space."),(0,o.kt)("li",{parentName:"ul"},"Runs the path through ",(0,o.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize"},"String.prototype.normalize"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { normalizePath } from "obsidian";\nconst pathToPlugin = normalizePath(app.vault.configDir + "//plugins/my-plugin");\n// pathToPlugin contains ".obsidian/plugins/my-plugin" not .obsidian//plugins/my-plugin\n')))}m.isMDXComponent=!0}}]);