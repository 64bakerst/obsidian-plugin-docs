"use strict";(self.webpackChunkobsidian_plugin_docs=self.webpackChunkobsidian_plugin_docs||[]).push([[141],{4606:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return r},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return c},default:function(){return p}});var s=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],r={sidebar_position:6},u="Events",l={unversionedId:"events",id:"events",isDocsHomePage:!1,title:"Events",description:"Many of the interfaces in the Obsidian lets you subscribe to events throughout the application, for example when the user makes changes to a file.",source:"@site/docs/events.md",sourceDirName:".",slug:"/events",permalink:"/obsidian-plugin-docs/events",editUrl:"https://github.com/marcusolsson/obsidian-plugin-docs/edit/main/docs/events.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Ribbon actions",permalink:"/obsidian-plugin-docs/ribbon"},next:{title:"Custom views",permalink:"/obsidian-plugin-docs/custom-views"}},c=[],d={toc:c};function p(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,s.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"events"},"Events"),(0,o.kt)("p",null,"Many of the interfaces in the Obsidian lets you subscribe to events throughout the application, for example when the user makes changes to a file."),(0,o.kt)("p",null,"Any registered event handlers need to be detached whenever the plugin unloads. The safest way to make sure this happens is to use the ",(0,o.kt)("inlineCode",{parentName:"p"},"registerEvent")," method."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="main.ts" {5-7}',title:'"main.ts"',"{5-7}":!0},"import { Plugin } from \"obsidian\";\n\nexport default class MyPlugin extends Plugin {\n  async onload() {\n    this.registerEvent(this.app.vault.on('create', () => {\n      console.log('a new file has entered the arena')\n    }));\n  }\n}\n")))}p.isMDXComponent=!0}}]);